# This is a basic workflow to create, configure and deploy artefacts and resources
# for the PPE Inventory project in the DEMO environment

name: GCP Deploy

on:
  push:
    branches: [ master ]

env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  #FUNCTION: europe-west2-${{ secrets.PROJECT_ID }}.cloudfunctions.net/

jobs:

  # These run in parallel because gcp-services and setup-networking only make changes on the first run.
  # Running in parallel speeds things up for normal runs (accepting you might get one or two errors for a new deployment)

  gcp-services:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup gcloud CLI
        uses: GoogleCloudPlatform/github-actions/@master
        with:
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.PROJECT_ID }}
          export_default_credentials: true
      # Enable the APIs for services we need
      - name: Enable APIs
        run: |
          gcloud services enable cloudresourcemanager.googleapis.com
          gcloud services enable cloudfunctions.googleapis.com
          gcloud services enable sheets.googleapis.com
          gcloud services enable cloudbuild.googleapis.com
          gcloud services enable run.googleapis.com

  egress-networking:

    # We need traffic to egress through a VPC so that it can have a static IP address
    # See: https://cloud.google.com/functions/docs/networking/network-settings#route-egress-to-vpc

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup gcloud CLI
        uses: GoogleCloudPlatform/github-actions/@master
        with:
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.PROJECT_ID }}
          export_default_credentials: true
      # Public IP address
      - name: IP address
        run: |
          gcloud compute addresses describe ofsted-egress-ip --region=europe-west2 || \
          gcloud compute addresses create ofsted-egress-ip --region=europe-west2
      # Network
      - name: Network
        run: |
          gcloud compute networks describe ofsted-egress-network || \
          gcloud compute networks create ofsted-egress-network --subnet-mode=custom
      # Router
      - name: Router
        run: |
          gcloud compute routers describe ofsted-egress-router --region=europe-west2 || \
          gcloud compute routers create ofsted-egress-router \
              --network ofsted-egress-network \
              --region=europe-west2
      # NAT
      - name: Router
        run: |
          gcloud compute routers nats describe ofsted-egress-nat --router=ofsted-egress-router --region=europe-west2 || \
          gcloud compute routers nats create ofsted-egress-nat \
              --router=ofsted-egress-router \
              --router-region=europe-west2 \
              --nat-primary-subnet-ip-ranges \
              --nat-external-ip-pool=ofsted-egress-ip
      # VPC connector for function traffic
      - name: Router
        run: |
          project_id=$(gcloud config get-value project)
          project_number=$(gcloud projects describe $project_id --format="value(projectNumber)")
          gcloud compute networks vpc-access connectors describe ofsted-egress-vpcc --region europe-west2 || \
          gcloud compute networks vpc-access connectors create ofsted-egress-vpcc \
              --network=ofsted-egress-network \
              --region=europe-west2 \
              --range=10.0.0.16/28
          gcloud projects add-iam-policy-binding $project_id \
              --member=serviceAccount:service-${project_number}@gcf-admin-robot.iam.gserviceaccount.com \
              --role=roles/viewer
          gcloud projects add-iam-policy-binding $project_id \
              --member=serviceAccount:service-${project_number}@gcf-admin-robot.iam.gserviceaccount.com \
              --role=roles/compute.networkUser

  secrets:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup gcloud CLI
        uses: GoogleCloudPlatform/github-actions/@master
        with:
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.PROJECT_ID }}
          export_default_credentials: true
        env:
          OFTSED_USERNAME: ${{ secrets.OFSTED_USERNAME }}
          OFTSED_PASSWORD: ${{ secrets.OFTSED_PASSWORD }}
          OFTSED_PUBLIC_KEY: ${{ secrets.OFTSED_PUBLIC_KEY }}
          OFTSED_PRIVATE_KEY: ${{ secrets.OFTSED_PRIVATE_KEY }}
      # Ofsted certificate, key and key password
      # see: https://cloud.google.com/sdk/gcloud/reference/secrets/create
      - name: username
        run: |
          gcloud secrets describe username || \
          echo $OFTSED_USERNAME | gcloud secrets create username --data-file=- --replication-policy=user-managed --locations=europe-west2
      - name: password
        run: |
          gcloud secrets describe password || \
          echo $OFTSED_PASSWORD | gcloud secrets create password --data-file=- --replication-policy=user-managed --locations=europe-west2
      - name: public_key
        run: |
          gcloud secrets describe public_key || \
          echo $OFTSED_PUBLIC_KEY | gcloud secrets create public_key --data-file=- --replication-policy=user-managed --locations=europe-west2
      - name: private_key
        run: |
          gcloud secrets describe private_key || \
          echo $OFTSED_PRIVATE_KEY | gcloud secrets create private_key --data-file=- --replication-policy=user-managed --locations=europe-west2
      - name: permissions
        run: |
          project_id=$(gcloud config get-value project)
          gcloud projects add-iam-policy-binding $project_id \
              --member=serviceAccount:${project_id}@appspot.gserviceaccount.com \
              --role=roles/secretmanager.secretAccessor

  proxy-function:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup gcloud CLI
        uses: GoogleCloudPlatform/github-actions/@master
        with:
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.PROJECT_ID }}
          export_default_credentials: true
      # Deploy form function
      - name: Deploy proxy function
        run: |
          cd proxy
          project_id=$(gcloud config get-value project)
          project_number=$(gcloud projects describe $project_id --format="value(projectNumber)")
          gcloud functions deploy proxy --runtime=python37 --set-env-vars PROJECT_NUMBER=${project_number},WSDL=./wsdl.xml \
            --region=europe-west2 --memory=256MB --trigger-http \
            --vpc-connector ofsted-egress-vpcc \
            --egress-settings all

  ofsted-client-container:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup gcloud CLI
        uses: GoogleCloudPlatform/github-actions/@master
        with:
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          project_id: ${{ secrets.PROJECT_ID }}
          export_default_credentials: true
      # Deploy the container
      # NB Cloud Run is currently available in eurompe-west1 (Belgium) and europe-west2 (Netherlands) but not europe-west2 (London)
      - name: Deploy Ofsted feed container
        run: |
          cd ofsted-client
          project_id=$(gcloud config get-value project)
          gcloud builds submit --tag gcr.io/${project_id}/ofsted-client --timeout 15m
          gcloud run deploy ofsted-client --image=gcr.io/${project_id}/ofsted-client \
            --platform=managed --region=europe-west1 --service-account=${project_id}@appspot.gserviceaccount.com --allow-unauthenticated \
            --update-env-vars=FUNCTION=europe-west2-${project_id}.cloudfunctions.net/proxy
